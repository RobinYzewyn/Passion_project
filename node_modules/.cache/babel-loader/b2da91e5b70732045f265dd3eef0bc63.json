{"ast":null,"code":"var _jsxFileName = \"/Users/robinyzewyn/Documents/Howest/Jaar3/Development/Passion_Project/Project/client/src/components/QRCamera.js\",\n    _s = $RefreshSig$();\n\nimport QrReader from 'react-qr-reader';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QRCamera() {\n  _s();\n\n  const [result, setResult] = useState('');\n\n  const handleScan = data => {\n    console.log('x', data);\n\n    if (data) {\n      setResult(data);\n    }\n  };\n\n  const handleError = err => {\n    console.error(err);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QrReader, {\n      delay: 300,\n      onError: () => handleError,\n      onScan: () => handleScan,\n      style: {\n        width: '20%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QRCamera, \"+gLbWhCz1wxZi8Q3iizH9D49vKk=\");\n\n_c = QRCamera;\n\nvar _c;\n\n$RefreshReg$(_c, \"QRCamera\");","map":{"version":3,"sources":["/Users/robinyzewyn/Documents/Howest/Jaar3/Development/Passion_Project/Project/client/src/components/QRCamera.js"],"names":["QrReader","useState","QRCamera","result","setResult","handleScan","data","console","log","handleError","err","error","width"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,iBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMI,UAAU,GAAGC,IAAI,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,IAAjB;;AACA,QAAIA,IAAJ,EAAU;AACNF,MAAAA,SAAS,CAACE,IAAD,CAAT;AACH;AACJ,GALD;;AAMA,QAAMG,WAAW,GAAGC,GAAG,IAAI;AACvBH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AACF,MAAA,KAAK,EAAE,GADL;AAEF,MAAA,OAAO,EAAE,MAAMD,WAFb;AAGF,MAAA,MAAM,EAAE,MAAMJ,UAHZ;AAIF,MAAA,KAAK,EAAE;AAAEO,QAAAA,KAAK,EAAE;AAAT;AAJL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAA,gBAAIT;AAAJ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAzBuBD,Q;;KAAAA,Q","sourcesContent":["import QrReader from 'react-qr-reader'\nimport { useState } from \"react\"\nexport default function QRCamera(){\n    const [result, setResult] = useState('');\n\n    const handleScan = data => {\n        console.log('x', data);\n        if (data) {\n            setResult(data);\n        }\n    }\n    const handleError = err => {\n        console.error(err)\n    }\n\n    return (\n        <div>\n            <p>Camera</p>\n            <QrReader\n          delay={300}\n          onError={() => handleError}\n          onScan={() => handleScan}\n          style={{ width: '20%' }}\n        />\n            <p>{result}</p>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}