{"ast":null,"code":"var _jsxFileName = \"/Users/robinyzewyn/Documents/Howest/Jaar3/Development/Passion_Project/Project/client/src/components/QRCodePage.js\",\n    _s = $RefreshSig$();\n\nimport QRCode from \"react-qr-code\";\nimport io from \"socket.io-client\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QRCodex() {\n  _s();\n\n  let socket;\n  const CONNECTION_PORT = \"localhost:3001/\";\n  useEffect(() => {\n    socket = io(CONNECTION_PORT);\n  }, [CONNECTION_PORT]);\n  const [room, setRoom] = useState('');\n  useEffect(() => {\n    randomCode();\n    socket.on('successful_connection', amountPlayers => {\n      console.log('succes', amountPlayers);\n    });\n  }, []);\n  useEffect(() => {});\n\n  const randomCode = () => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < 3; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    setRoom(result);\n    socket.emit('create_room', result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Code: \", room]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QRCode, {\n      value: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Start game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QRCodex, \"jePgLRxhu0QhbywTBo1wltw0f/I=\");\n\n_c = QRCodex;\n\nvar _c;\n\n$RefreshReg$(_c, \"QRCodex\");","map":{"version":3,"sources":["/Users/robinyzewyn/Documents/Howest/Jaar3/Development/Passion_Project/Project/client/src/components/QRCodePage.js"],"names":["QRCode","io","useState","useEffect","QRCodex","socket","CONNECTION_PORT","room","setRoom","randomCode","on","amountPlayers","console","log","result","characters","charactersLength","length","i","charAt","Math","floor","random","emit"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,eAAnB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,eAAe,SAASC,OAAT,GAAkB;AAAA;;AAChC,MAAIC,MAAJ;AACG,QAAMC,eAAe,GAAG,iBAAxB;AACHH,EAAAA,SAAS,CAAC,MAAM;AACTE,IAAAA,MAAM,GAAGJ,EAAE,CAACK,eAAD,CAAX;AACH,GAFK,EAEH,CAACA,eAAD,CAFG,CAAT;AAIA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACbM,IAAAA,UAAU;AAEVJ,IAAAA,MAAM,CAACK,EAAP,CAAU,uBAAV,EAAoCC,aAAD,IAAiB;AACnDC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,aAAtB;AACA,KAFD;AAGA,GANQ,EAMN,EANM,CAAT;AAQAR,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,CAAT;;AAIA,QAAMM,UAAU,GAAG,MAAK;AACvB,QAAIK,MAAM,GAAG,EAAb;AACA,QAAIC,UAAU,GAAG,gEAAjB;AACA,QAAIC,gBAAgB,GAAGD,UAAU,CAACE,MAAlC;;AACA,SAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA8B;AAC7BJ,MAAAA,MAAM,IAAIC,UAAU,CAACI,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,gBAA3B,CAAlB,CAAV;AACA;;AACDR,IAAAA,OAAO,CAACM,MAAD,CAAP;AACAT,IAAAA,MAAM,CAACkB,IAAP,CAAY,aAAZ,EAA2BT,MAA3B;AACA,GATD;;AAWG,sBACI;AAAA,4BACI;AAAA,2BAAUP,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHK;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAvCuBH,O;;KAAAA,O","sourcesContent":["import QRCode from \"react-qr-code\";\nimport io from \"socket.io-client\";\nimport { useState, useEffect } from \"react\"\n\nexport default function QRCodex(){\n\tlet socket;\n    const CONNECTION_PORT = \"localhost:3001/\"\n\tuseEffect(() => {\n        socket = io(CONNECTION_PORT);\n    }, [CONNECTION_PORT]);\n\n\tconst [room, setRoom] = useState('');\n\n\tuseEffect(()=>{\n\t\trandomCode();\n\n\t\tsocket.on('successful_connection', (amountPlayers)=>{\n\t\t\tconsole.log('succes', amountPlayers);\n\t\t})\n\t}, [])\n\n\tuseEffect(()=>{\n\t\t\n\t})\n\n\tconst randomCode = () =>{\n\t\tvar result = '';\n\t\tvar characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\t\tvar charactersLength = characters.length;\n\t\tfor ( var i = 0; i < 3; i++ ) {\n\t\t\tresult += characters.charAt(Math.floor(Math.random() * charactersLength));\n\t\t}\n\t\tsetRoom(result);\n\t\tsocket.emit('create_room', result);\n\t}\n\n    return (\n        <div>\n            <p>Code: {room}</p>\n            <QRCode value={room} />\n\t\t\t<button>Start game</button>\n        </div> \n    )\n}"]},"metadata":{},"sourceType":"module"}